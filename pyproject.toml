# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

[build-system]
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

# Project settings -----------------------------------------------------------------------------------------------------
[project]
version = "1.0.0"
name = "YOLOv5-DroneDetection"
description = "Custom YOLOv5 model for detecting drones, birds, and airplanes."
readme = "README.md"
requires-python = ">=3.8"
license = { "text" = "AGPL-3.0" }
keywords = ["machine-learning", "deep-learning", "computer-vision", "drone-detection", "YOLOv5", "ESP32-CAM"]
authors = [
    { name = "Sai Venkatakrish" },
    { name = "Team Drone Detection" }
]
maintainers = [
    { name = "Sai Venkatakrish" },
    { name = "Team Drone Detection" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

# Required dependencies ------------------------------------------------------------------------------------------------
dependencies = [
    "matplotlib>=3.3.0",
    "numpy>=1.22.2",
    "opencv-python>=4.6.0",
    "pillow>=7.1.2",
    "pyyaml>=5.3.1",
    "requests>=2.23.0",
    "scipy>=1.4.1",
    "torch>=1.8.0",
    "torchvision>=0.9.0",
    "tqdm>=4.64.0", # progress bars
    "psutil", # system utilization
    "py-cpuinfo", # display CPU info
    "thop>=0.1.1", # FLOPs computation
    "pandas>=1.1.4",
    "seaborn>=0.11.0", # plotting
    "ultralytics>=8.1.47", # Ultralytics YOLO
    "tensorflow>=2.8.0", # TensorFlow for TFLite conversion
    "tflite-support>=0.4.3", # TensorFlow Lite support for ESP32-CAM
]

# Optional dependencies ------------------------------------------------------------------------------------------------
[project.optional-dependencies]
dev = [
    "ipython",
    "check-manifest",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mkdocs-redirects",
    "mkdocs-ultralytics-plugin>=0.0.34",
]
export = [
    "onnx>=1.12.0", # ONNX export
    "coremltools>=7.0; platform_system != 'Windows'", # CoreML for macOS/Linux
    "openvino-dev>=2023.0", # OpenVINO export
    "tensorflow>=2.8.0", # TensorFlow export
    "tensorflowjs>=3.9.0", # TensorFlow.js export
    "tflite-support>=0.4.3", # TFLite export
]
logging = [
    "comet", # Comet ML for tracking
    "tensorboard>=2.13.0",
    "dvclive>=2.12.0",
]
extra = [
    "ipython",
    "albumentations>=1.0.3", # Training augmentations
    "pycocotools>=2.0.6", # COCO mAP calculation
]

[project.urls]
"Bug Reports" = "https://github.com/saivenkatakrish/modelspt/issues"
"Source" = "https://github.com/saivenkatakrish/modelspt"

# Tools settings -------------------------------------------------------------------------------------------------------
[tool.pytest]
norecursedirs = [".git", "dist", "build"]
addopts = "--doctest-modules --durations=30 --color=yes"

[tool.isort]
line_length = 120
multi_line_output = 0

[tool.ruff]
line-length = 120

[tool.docformatter]
wrap-summaries = 120
wrap-descriptions = 120
in-place = true
pre-summary-newline = true
close-quotes-on-newline = true

[tool.codespell]
ignore-words-list = "crate,nd,strack,dota,ane,segway,fo,gool,winn,commend"
skip = '*.csv,*venv*,docs/??/,docs/mkdocs_??.yml'
